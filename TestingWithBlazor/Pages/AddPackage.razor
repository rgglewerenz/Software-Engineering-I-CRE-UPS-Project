@page "/AddPackage"
@inject IPackageHandler pacHandler
@inject NavigationManager navman

<ErrorMessageHandler @ref="errorMessage"></ErrorMessageHandler>
<div class="class-container">
	<header>Package ID</header>
	<input type="number" @bind-value="new_package.TrackingID" />

	<header>Street Address</header>
	<input type="text" @bind-value="new_package.Address.Street" />
	<header>City</header>
	<input type="text" @bind-value="new_package.Address.City" />
	<header>State</header>
	<input type="text" @bind-value="new_package.Address.State" />
	<header>Zip Code</header>
	<input type="number" @bind-value="new_package.Address.Zipcode" />
	<br/>
	<button class="btn btn-outline-primary"@onclick="HandleAdd">Add</button>
</div>

@code {
	ErrorMessageHandler errorMessage;
	Package new_package = new Package();

	void HandleAdd(){
		if(string.IsNullOrWhiteSpace(new_package.Address.Street)){
			errorMessage.ShowMessage("Street can not be empty");
			return;
		}
		if(string.IsNullOrWhiteSpace(new_package.Address.City)){
			errorMessage.ShowMessage("City can not be empty");
			return;
		}
		if(string.IsNullOrWhiteSpace(new_package.Address.State)){
			errorMessage.ShowMessage("State can not be empty");
			return;
		}
		if(new_package.TrackingID == 0){
			errorMessage.ShowMessage("Tracking Id can not be 0");
			return;
		}
		if(new_package.Address.Zipcode.ToString().Count() != 5){
			errorMessage.ShowMessage("ZipCode must be 5 digits");
			return;
		}
		foreach(var b in pacHandler.GetPackages()){
			if(b.TrackingID == new_package.TrackingID){
				errorMessage.ShowMessage("Tracking ID must be unique");
				return;
			}
		}
		pacHandler.AddPackage(new_package);
		navman.NavigateTo("/MainApp");
	}
}
