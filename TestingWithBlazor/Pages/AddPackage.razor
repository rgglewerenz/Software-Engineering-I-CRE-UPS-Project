@page "/AddPackage"
@using System.Text.RegularExpressions
@inject IPackageHandler pacHandler
@inject NavigationManager navman

<header style="text-align:center">Add Package</header>

<TestingWithBlazor.Shared.Form.PackageForm ButtonText="Add" Check_Handle="@check_add"  OnValidSubmit="@ValidSubmit" EditID=true/>

@code {

	bool loading = false;

	string _dimension_regex = "[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}x[ ]{0,}[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}x[ ]{0,}[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}";

	[CascadingParameter] public MainLayout MainLayout { get; set; }

	bool check_dimensions(string dimensions)
	{
		return Regex.IsMatch(dimensions, _dimension_regex);
	}

	bool check_add(ErrorMessageHandler errorMessage, Package new_package){
		if (string.IsNullOrWhiteSpace(new_package.Address.Street))
		{
			errorMessage.ShowMessage("Street can not be empty");
			return false;
		}
		if (string.IsNullOrWhiteSpace(new_package.Address.City))
		{
			errorMessage.ShowMessage("City can not be empty");
			return false;
		}
		if (string.IsNullOrWhiteSpace(new_package.Address.State) || new_package.Address.State.Count() > 2)
		{
			errorMessage.ShowMessage("State can not be empty, and must use the 2 character code");
			return false;
		}
		if (new_package.TrackingID == 0)
		{
			errorMessage.ShowMessage("Tracking Id can not be 0");
			return false;
		}
		if (new_package.Address.Zipcode.ToString().Count() != 5)
		{
			errorMessage.ShowMessage("ZipCode must be 5 digits");
			return false;
		}
		if (!string.IsNullOrEmpty(new_package.Details.Dimensions) && !check_dimensions(new_package.Details.Dimensions))
		{
			errorMessage.ShowMessage("Dimensions must be 3 numbers separated by an x");
			return false;
		}
		foreach (var b in pacHandler.GetPackages())
		{
			if (b.TrackingID == new_package.TrackingID)
			{
				errorMessage.ShowMessage("Tracking ID must be unique");
				return false;
			}
		}
		return true;
	}

	void ValidSubmit(Package var){
		pacHandler.AddPackage(var);
		navman.NavigateTo("/MainApp");
		 InvokeAsync(() => MainLayout.ReloadPage());
	}
}
