@page "/EditPackage/{packageID:int}"
@using System.Text.RegularExpressions
@inject IPackageHandler pacHandler
@inject NavigationManager navman
@inject IJSRuntime js


@if(baseline_package != null)
{
	<header style="text-align:center">Edit Package</header>
	<TestingWithBlazor.Shared.Form.PackageForm ButtonText="Save" Package="baseline_package" Check_Handle="@check_edit" EditID="false" OnValidSubmit="@ValidSubmit"/>
}
else
{
	<h2>Error</h2>
	<h8>Unable to find a package with the id = @packageID</h8>
}

@code {
	[Parameter] public int packageID { get; set; }

	Package baseline_package;

	string _dimension_regex = "[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}x[ ]{0,}[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}x[ ]{0,}[1-9]{1,}[.]{0,1}[1-9]{0,}[ ]{0,}";

	bool check_dimensions(string dimensions)
	{
		Regex regex = new Regex(_dimension_regex);
		return Regex.IsMatch(dimensions, _dimension_regex);
	}


	protected override void OnInitialized()
	{
		base.OnInitialized();
		if (!pacHandler.GetPackages().Where(x => x.TrackingID == packageID).Any())
		{
			return;
		}
		baseline_package = pacHandler.GetPackages().Where(x => x.TrackingID == packageID).First();
	}

	bool loading = false;

	bool check_edit(ErrorMessageHandler errorMessage, Package new_package){
		if (string.IsNullOrWhiteSpace(new_package.Address.Street))
		{
			errorMessage.ShowMessage("Street can not be empty");
			return false;
		}
		if (string.IsNullOrWhiteSpace(new_package.Address.City))
		{
			errorMessage.ShowMessage("City can not be empty");
			return false;
		}
		if (string.IsNullOrWhiteSpace(new_package.Address.State))
		{
			errorMessage.ShowMessage("State can not be empty");
			return false;
		}
		if (new_package.Address.Zipcode.ToString().Count() != 5)
		{
			errorMessage.ShowMessage("ZipCode must be 5 digits");
			return false;
		}
		if (!check_dimensions(new_package.Details.Dimensions))
		{
			errorMessage.ShowMessage("Dimensions must be 3 numbers separated by an x");
			return false;
		}

		return true;
	}

	void ValidSubmit(Package var){
		var tempPackages = pacHandler.GetPackages();

		for(int i =0; i < tempPackages.Count; i++)
		{
			if(tempPackages[i].TrackingID == var.TrackingID)
			{
				tempPackages[i] = var;
				break;
			}
		}

		pacHandler.SetPackages(tempPackages);
		navman.NavigateTo("/MainApp");
	}
}