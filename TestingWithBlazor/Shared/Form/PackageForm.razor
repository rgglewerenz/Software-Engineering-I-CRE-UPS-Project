@inject IJSRuntime js
<ErrorMessageHandler @ref="errorMessage"></ErrorMessageHandler>

<CenterHorizontally>
	<div class="class-container">
		<RowContainer>
			<RowElement>
				<header>Package ID</header>
				<input type="number" @bind-value="@Package.TrackingID" disabled="@(loading || !EditID)" />
			</RowElement>
		</RowContainer>
		<RowContainer>
			<RowElement>
				<header>Street Address</header>
				<input type="text" @bind-value="@Package.Address.Street" disabled="@loading" />
			</RowElement>
			<RowElement>
				<header>City</header>
				<input type="text" @bind-value="@Package.Address.City" disabled="@loading" />
			</RowElement>
		</RowContainer>
		<RowContainer KeepLayoutOnThin=true>
			<RowElement>
				<header>State</header>
				<input type="text" @bind-value="@Package.Address.State" disabled="@loading" />	
			</RowElement>
			<RowElement>
				<header>Zip Code</header>
				<input type="number" @bind-value="@Package.Address.Zipcode" disabled="@loading"/>
			</RowElement>
		</RowContainer>
		<br/>
		<div style="text-align:center;">
			<header>Details:</header>
		</div>
		<hr style="border-color:var(--primary-text-color); border-width:3px;"/>
		<RowContainer>
			<RowElement>
				<header>Dimensions</header>
				<input type="text" @bind-value="@Package.Details.Dimensions" disabled="@loading" />
			</RowElement>
			<RowElement>
				<header>Reciever's Name</header>
				<input type="text" @bind-value="@Package.Details.RecieversName" disabled="@loading" />
			</RowElement>
		</RowContainer>
		<RowContainer>
			<RowElement>
				<header>Weight</header>
				<input type="number" @bind-value="@Package.Details.Weight" disabled="@loading" />
			</RowElement>
		</RowContainer>
		<br/>
		<br/>
		
		<CenterHorizontally>
			<button class="btn btn-outline-primary" @onclick="OnSubmit">@ButtonText</button>
		</CenterHorizontally>
	</div>
</CenterHorizontally>

@code {
	[Parameter] public Func<ErrorMessageHandler, Package,bool> Check_Handle { get; set; }
	[Parameter] public Action<Package> OnValidSubmit { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Submit";
	[Parameter] public bool EditID { get; set; } = false;

	[Parameter] public Package Package { get; set; } = new Package();

	ErrorMessageHandler errorMessage;
	bool loading = false;


	protected override async Task OnAfterRenderAsync(bool first)
	{
		await base.OnAfterRenderAsync(first);

		if(first){
			//await js.InvokeVoidAsync("form-load", "row-container");
		}
	}

	void OnSubmit()
	{

		loading = true;
		if (!Check_Handle.Invoke(errorMessage, Package))
		{
			loading = false;
			return;
		}
		OnValidSubmit.Invoke(Package);
	}
}
