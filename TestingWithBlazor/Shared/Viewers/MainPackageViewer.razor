@using System.Globalization
@inject NavigationManager navman
@inject IJSRuntime js
@inject IMapApi mapApi
@inject IGPSService GpsService

<div class="main-package-container">
    <div style="width:100%;text-align:center;">
        <h5>Package ID : @context.TrackingID</h5>
    </div>
    <div class="address-view">
        <h7>@context.Address.Street</h7>
        <br/>
        <h7>@context.Address.City, @context.Address.State</h7>
        <h7>@context.Address.Zipcode</h7>
    </div>

    <div class="detailed-view">
        <h7>Distance: </h7>
        <h7>@((context.DistanceFromPoint == 0) ? "N/A" : (context.DistanceFromPoint).ToString("N", setPrecision)) mi</h7>
        <br/>
        <h7>Dimensions: </h7>
        <h7>@(string.IsNullOrEmpty(context.Details.Dimensions) ? "N/A" : context.Details.Dimensions)</h7>
        <br/>
        <h7>Name: </h7>
        <h7>@(string.IsNullOrEmpty(context.Details.RecieversName) ? "N/A" : context.Details.RecieversName)</h7>
        <br/>
        <h7>Weight: </h7>
        <h7>@((context.Details.Weight == 0) ? "N/A" : context.Details.Weight) lbs</h7>
        <br/>
    </div>
    <CenterHorizontally>
        <button class="btn btn-outline-primary" @onclick=Edit>Edit</button>
        <button class="btn btn-outline-warning" @onclick=@(() =>{navman.NavigateTo($"/DeliveryForm/{context.TrackingID}");})>I have delivered the package already</button>
        <button class="btn btn-outline-info" @onclick=NavigateToGoogleMaps>Directions</button>
    </CenterHorizontally>
</div>

@code {
    [Parameter] public Package context { get; set; }

    void Edit(){
        navman.NavigateTo($"/EditPackage/{context.TrackingID}");
    }

    const double LAT_TO_MILES = 69;
    string googleMapsURL;
    NumberFormatInfo setPrecision = new NumberFormatInfo();

    protected override async Task OnInitializedAsync()
    {
        await  base.OnInitializedAsync();
        setPrecision.NumberDecimalDigits = 2;
    }


    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        googleMapsURL = mapApi.GenerateGoogleMapsUrl(await mapApi.GetAddressFromCoordinate(await GpsService.GetCurrentCoordinates()), context.Address);
    }

    private async Task NavigateToGoogleMaps(){
        if(await js.InvokeAsync<bool>("isElectron")){
            await js.InvokeVoidAsync("window.open", googleMapsURL, "_blank", "frame=true");
        }
        else{
            await js.InvokeVoidAsync("window.open",googleMapsURL,"_blank");
        }
    }

}
